#include <SoftwareSerial.h>

#include "FastLED.h"

#define NUM_LEDS 45
#define LED_PIN 2
#define COLOR_ORDER GRB

CRGB leds[NUM_LEDS];

SoftwareSerial Bluetooth(53, 52); // Arduino(RX, TX) - Bluetooth (TX, RX)

// Initial background color 
int backR = 100;
int backG = 50;
int backB = 10;

// Initial reactive color 
int reactiveR = 10;
int reactiveG = 50;
int reactiveB = 100;

int brightness = 50; // Initial brightness

String dataIn = "";

void setup() {
  FastLED.addLeds<WS2812, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS);
  FastLED.setBrightness(brightness);
  Serial.begin(38400);
  Bluetooth.begin(38400); // Default baud rate of the Bluetooth module

  for (int pinNo = 0 + 3; pinNo <= 45 + 3; pinNo++) {
    pinMode(pinNo, INPUT);
  }
}

void loop() {
  if (Bluetooth.available() > 0) {
    dataIn = Bluetooth.readString();
    delay(20);
    if (dataIn.startsWith("1")) {
      delay(10);
      String stringR = dataIn.substring(dataIn.indexOf("R") + 1, dataIn.indexOf("G"));
      reactiveR = stringR.toInt();
      String stringG = dataIn.substring(dataIn.indexOf("G") + 1, dataIn.indexOf("B"));
      reactiveG = stringG.toInt();
      String stringB = dataIn.substring(dataIn.indexOf("B") + 1, dataIn.indexOf("E"));
      reactiveB = stringB.toInt();
    }
    else if (dataIn.startsWith("2")) {
      String stringR = dataIn.substring(dataIn.indexOf("R") + 1, dataIn.indexOf("G"));
      backR = stringR.toInt();
      String stringG = dataIn.substring(dataIn.indexOf("G") + 1, dataIn.indexOf("B"));
      backG = stringG.toInt();
      String stringB = dataIn.substring(dataIn.indexOf("B") + 1, dataIn.indexOf("E"));
      backB = stringB.toInt();
    }
    else if (dataIn.startsWith("3")) {
      String stringBrightness = dataIn.substring(dataIn.indexOf("3") + 1, dataIn.length());
      brightness = stringBrightness.toInt();
      FastLED.setBrightness(brightness);
    }
  }

  for (int pinNo = 0; pinNo <= NUM_LEDS-1; pinNo++) {
    leds[pinNo] = CRGB( backR, backG, backB);
    if ( digitalRead(pinNo + 3) == LOW ) {
      leds[pinNo] = CRGB( reactiveR, reactiveG, reactiveB);
    }
  }
  FastLED.show();
  delay(20);
}

## Tady přidávám komentář k jednotlivým příkazům: 
* SoftwareSerial.h: Tato knihovna umožňuje používat softwarové sériové připojení na jiných pinech než standardní hardwarové sériové připojení.
* FastLED.h: Knihovna pro ovládání adresovatelných LED pásků (např. WS2812).
* NUM_LEDS: Definuje počet LED diod na pásku.
* LED_PIN: Pin, ke kterému je připojen datový vodič LED pásku.
* COLOR_ORDER: Určuje pořadí barevných kanálů pro LED diody.
* leds: Pole, které uchovává barvy pro každou LED diodu na pásku.
* Bluetooth: Softwarové sériové připojení pro komunikaci s Bluetooth modulem.
* backR, backG, backB: Počáteční barvy pozadí LED diod.
* reactiveR, reactiveG, reactiveB: Počáteční reaktivní barvy LED diod.
* brightness: Počáteční jas LED diod.
* dataIn: Proměnná pro ukládání dat přijatých přes Bluetooth.
* FastLED.addLeds: Inicializuje LED pásek.
* FastLED.setBrightness: Nastaví počáteční jas LED diod.
* Serial.begin: Inicializuje sériovou komunikaci pro ladění.
* Bluetooth.begin: Inicializuje sériovou komunikaci s Bluetooth modulem.
* for loop: Nastaví piny 3 až 48 jako vstupy. Tyto piny jsou použity pro tlačítka nebo senzory.
* Bluetooth.available(): Kontroluje, zda jsou k dispozici data z Bluetooth.
* Bluetooth.readString(): Čte přijatá data jako řetězec.
* dataIn.startsWith("1"): Zpracovává data pro změnu reaktivní barvy LED.
* dataIn.startsWith("2"): Zpracovává data pro změnu barvy pozadí LED.
* dataIn.startsWith("3"): Zpracovává data pro změnu jasu LED.
* for loop: Prochází všechny LED diody. Nastaví barvu každé LED diody na barvu pozadí a změní ji na reaktivní barvu, pokud je příslušný pin v LOW stavu (tlačítko nebo senzor je aktivován).
* FastLED.show(): Aktualizuje LED pásek s novými barvami.
